%tensorflow_version 2.x 

from __future__ import absolute_import, division, print_function, unicode_literals
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from IPython.display import clear_output
from six.moves import urllib
import tensorflow.compat.v2.feature_column as fc
import tensorflow as tf

dftrain = pd.read_csv('https://raw.githubusercontent.com/nickjackson862/machine-learning/main/trainData.csv') # training data
dfeval = pd.read_csv('https://raw.githubusercontent.com/nickjackson862/machine-learning/main/testData.csv') # testing data
y_train = dftrain.pop('Allocated')
y_eval = dfeval.pop('Allocated')

CATEGORICAL_COLUMNS = ['GroupSkill1', 'GroupSkill2', 'GroupSkill3', 'GroupSkill4', 'ProjectSkill1', 'ProjectSkill2', 'ProjectSkill3', 'ProjectSkill4']

NUMERIC_COLUMNS = ['GroupNumber', 'GroupUnit', 'GroupPreference1', 'GroupPreference2', 'GroupPreference3', 'ProjectNumber', 'ProjectUnit', 'ProjectPreference1', 'ProjectPreference2', 'ProjectPreference3']

feature_columns = []
for feature_name in CATEGORICAL_COLUMNS:
  vocabulary = dftrain[feature_name].unique() 
  feature_columns.append(tf.feature_column.categorical_column_with_vocabulary_list(feature_name, vocabulary))

for feature_name in NUMERIC_COLUMNS:
  feature_columns.append(tf.feature_column.numeric_column(feature_name, dtype=tf.float32))

def make_input_fn(data_df, label_df, num_epochs=10, shuffle=True, batch_size=10):
  def input_function():
    ds = tf.data.Dataset.from_tensor_slices((dict(data_df), label_df)) 
    if shuffle:
      ds = ds.shuffle(1000)  
    ds = ds.batch(batch_size).repeat(num_epochs)  
    return ds 
  return input_function  

train_input_fn = make_input_fn(dftrain, y_train)  
eval_input_fn = make_input_fn(dfeval, y_eval, num_epochs=1, shuffle=False)

linear_est = tf.estimator.LinearClassifier(feature_columns=feature_columns)


linear_est.train(train_input_fn)  
result = linear_est.evaluate(eval_input_fn) 

clear_output() 
print(result['accuracy']) 
